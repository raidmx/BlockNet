{"$message_type":"diagnostic","message":"unresolved import `crate::order`","code":{"code":"E0432","explanation":"An import was unresolved.\n\nErroneous code example:\n\n```compile_fail,E0432\nuse something::Foo; // error: unresolved import `something::Foo`.\n```\n\nIn Rust 2015, paths in `use` statements are relative to the crate root. To\nimport items relative to the current and parent modules, use the `self::` and\n`super::` prefixes, respectively.\n\nIn Rust 2018 or later, paths in `use` statements are relative to the current\nmodule unless they begin with the name of a crate or a literal `crate::`, in\nwhich case they start from the crate root. As in Rust 2015 code, the `self::`\nand `super::` prefixes refer to the current and parent modules respectively.\n\nAlso verify that you didn't misspell the import name and that the import exists\nin the module from where you tried to import it. Example:\n\n```\nuse self::something::Foo; // Ok.\n\nmod something {\n    pub struct Foo;\n}\n# fn main() {}\n```\n\nIf you tried to use a module from an external crate and are using Rust 2015,\nyou may have missed the `extern crate` declaration (which is usually placed in\nthe crate root):\n\n```edition2015\nextern crate core; // Required to use the `core` crate in Rust 2015.\n\nuse core::any;\n# fn main() {}\n```\n\nSince Rust 2018 the `extern crate` declaration is not required and\nyou can instead just `use` it:\n\n```edition2018\nuse core::any; // No extern crate required in Rust 2018.\n# fn main() {}\n```\n"},"level":"error","spans":[{"file_name":"binary/src/impls/primitive.rs","byte_start":135,"byte_end":140,"line_start":4,"line_end":4,"column_start":12,"column_end":17,"is_primary":true,"text":[{"text":"use crate::order::ByteOrder;","highlight_start":12,"highlight_end":17}],"label":"could not find `order` in the crate root","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0432]\u001b[0m\u001b[0m\u001b[1m: unresolved import `crate::order`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mbinary/src/impls/primitive.rs:4:12\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m4\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse crate::order::ByteOrder;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mcould not find `order` in the crate root\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused imports: `BE` and `ByteOrder`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"binary/src/lib.rs","byte_start":53,"byte_end":62,"line_start":4,"line_end":4,"column_start":17,"column_end":26,"is_primary":true,"text":[{"text":"use byteorder::{ByteOrder, BE};","highlight_start":17,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"binary/src/lib.rs","byte_start":64,"byte_end":66,"line_start":4,"line_end":4,"column_start":28,"column_end":30,"is_primary":true,"text":[{"text":"use byteorder::{ByteOrder, BE};","highlight_start":28,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(unused_imports)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"binary/src/lib.rs","byte_start":37,"byte_end":69,"line_start":4,"line_end":5,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use byteorder::{ByteOrder, BE};","highlight_start":1,"highlight_end":32},{"text":"use bytes::BytesMut;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused imports: `BE` and `ByteOrder`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mbinary/src/lib.rs:4:17\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m4\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse byteorder::{ByteOrder, BE};\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                 \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(unused_imports)]` on by default\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the `?` operator can only be applied to values that implement `Try`","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"binary/src/impls/primitive.rs","byte_start":1608,"byte_end":1617,"line_start":62,"line_end":62,"column_start":35,"column_end":44,"is_primary":true,"text":[{"text":"                Some(Self::new(E::$read(r)?))","highlight_start":35,"highlight_end":44}],"label":"the `?` operator cannot be applied to type `u16`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"binary/src/impls/primitive.rs","byte_start":1608,"byte_end":1617,"line_start":62,"line_end":62,"column_start":35,"column_end":44,"is_primary":false,"text":[{"text":"                Some(Self::new(E::$read(r)?))","highlight_start":35,"highlight_end":44}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"binary/src/impls/primitive.rs","byte_start":1654,"byte_end":1707,"line_start":68,"line_end":68,"column_start":1,"column_end":54,"is_primary":false,"text":[{"text":"impl_serde!(U16, <E: ByteOrder>, read_u16, write_u16);","highlight_start":1,"highlight_end":54}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"impl_serde!","def_site_span":{"file_name":"binary/src/impls/primitive.rs","byte_start":1098,"byte_end":1121,"line_start":50,"line_end":50,"column_start":1,"column_end":24,"is_primary":false,"text":[{"text":"macro_rules! impl_serde {","highlight_start":1,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"desugaring of operator `?`","def_site_span":{"file_name":"binary/src/lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1,"is_primary":false,"text":[],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"the trait `Try` is not implemented for `u16`","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: the `?` operator can only be applied to values that implement `Try`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mbinary/src/impls/primitive.rs:62:35\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m62\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                Some(Self::new(E::$read(r)?))\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mthe `?` operator cannot be applied to type `u16`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m68\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mimpl_serde!(U16, <E: ByteOrder>, read_u16, write_u16);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-----------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: the trait `Try` is not implemented for `u16`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `impl_serde` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"no function or associated item named `put_i16` found for type parameter `E` in the current scope","code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","spans":[{"file_name":"binary/src/impls/primitive.rs","byte_start":1751,"byte_end":1758,"line_start":69,"line_end":69,"column_start":43,"column_end":50,"is_primary":true,"text":[{"text":"impl_serde!(I16, <E: ByteOrder>, get_i16, put_i16);","highlight_start":43,"highlight_end":50}],"label":"function or associated item cannot be called on `E` due to unsatisfied trait bounds","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"binary/src/impls/primitive.rs","byte_start":1727,"byte_end":1728,"line_start":69,"line_end":69,"column_start":19,"column_end":20,"is_primary":false,"text":[{"text":"impl_serde!(I16, <E: ByteOrder>, get_i16, put_i16);","highlight_start":19,"highlight_end":20}],"label":"function or associated item `put_i16` not found for this type parameter","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"items from traits can only be used if the type parameter is bounded by the trait","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"the following trait defines an item `put_i16`, perhaps you need to restrict type parameter `E` with it:","code":null,"level":"help","spans":[{"file_name":"binary/src/impls/primitive.rs","byte_start":1236,"byte_end":1236,"line_start":52,"line_end":52,"column_start":21,"column_end":21,"is_primary":true,"text":[{"text":"        impl<$($gen: $gen_constraint),*> Encode for $type<$($gen),*> {","highlight_start":21,"highlight_end":21}],"label":null,"suggested_replacement":" BufMut","suggestion_applicability":"MaybeIncorrect","expansion":{"span":{"file_name":"binary/src/impls/primitive.rs","byte_start":1709,"byte_end":1759,"line_start":69,"line_end":69,"column_start":1,"column_end":51,"is_primary":false,"text":[{"text":"impl_serde!(I16, <E: ByteOrder>, get_i16, put_i16);","highlight_start":1,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"impl_serde!","def_site_span":{"file_name":"binary/src/impls/primitive.rs","byte_start":1098,"byte_end":1121,"line_start":50,"line_end":50,"column_start":1,"column_end":24,"is_primary":false,"text":[{"text":"macro_rules! impl_serde {","highlight_start":1,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0599]\u001b[0m\u001b[0m\u001b[1m: no function or associated item named `put_i16` found for type parameter `E` in the current scope\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mbinary/src/impls/primitive.rs:69:43\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m69\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mimpl_serde!(I16, <E: ByteOrder>, get_i16, put_i16);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-\u001b[0m\u001b[0m                       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mfunction or associated item cannot be called on `E` due to unsatisfied trait bounds\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mfunction or associated item `put_i16` not found for this type parameter\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: items from traits can only be used if the type parameter is bounded by the trait\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: the following trait defines an item `put_i16`, perhaps you need to restrict type parameter `E` with it:\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m52\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        impl<$($gen:\u001b[0m\u001b[0m\u001b[38;5;10m BufMut\u001b[0m\u001b[0m $gen_constraint),*> Encode for $type<$($gen),*> {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[38;5;10m++++++\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"no function or associated item named `get_i16` found for type parameter `E` in the current scope","code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","spans":[{"file_name":"binary/src/impls/primitive.rs","byte_start":1742,"byte_end":1749,"line_start":69,"line_end":69,"column_start":34,"column_end":41,"is_primary":true,"text":[{"text":"impl_serde!(I16, <E: ByteOrder>, get_i16, put_i16);","highlight_start":34,"highlight_end":41}],"label":"function or associated item cannot be called on `E` due to unsatisfied trait bounds","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"binary/src/impls/primitive.rs","byte_start":1727,"byte_end":1728,"line_start":69,"line_end":69,"column_start":19,"column_end":20,"is_primary":false,"text":[{"text":"impl_serde!(I16, <E: ByteOrder>, get_i16, put_i16);","highlight_start":19,"highlight_end":20}],"label":"function or associated item `get_i16` not found for this type parameter","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"items from traits can only be used if the type parameter is bounded by the trait","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"the following trait defines an item `get_i16`, perhaps you need to restrict type parameter `E` with it:","code":null,"level":"help","spans":[{"file_name":"binary/src/impls/primitive.rs","byte_start":1441,"byte_end":1441,"line_start":59,"line_end":59,"column_start":21,"column_end":21,"is_primary":true,"text":[{"text":"        impl<$($gen: $gen_constraint),*> Decode<'_> for $type<$($gen),*> {","highlight_start":21,"highlight_end":21}],"label":null,"suggested_replacement":" Buf","suggestion_applicability":"MaybeIncorrect","expansion":{"span":{"file_name":"binary/src/impls/primitive.rs","byte_start":1709,"byte_end":1759,"line_start":69,"line_end":69,"column_start":1,"column_end":51,"is_primary":false,"text":[{"text":"impl_serde!(I16, <E: ByteOrder>, get_i16, put_i16);","highlight_start":1,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"impl_serde!","def_site_span":{"file_name":"binary/src/impls/primitive.rs","byte_start":1098,"byte_end":1121,"line_start":50,"line_end":50,"column_start":1,"column_end":24,"is_primary":false,"text":[{"text":"macro_rules! impl_serde {","highlight_start":1,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0599]\u001b[0m\u001b[0m\u001b[1m: no function or associated item named `get_i16` found for type parameter `E` in the current scope\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mbinary/src/impls/primitive.rs:69:34\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m69\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mimpl_serde!(I16, <E: ByteOrder>, get_i16, put_i16);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-\u001b[0m\u001b[0m              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mfunction or associated item cannot be called on `E` due to unsatisfied trait bounds\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mfunction or associated item `get_i16` not found for this type parameter\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: items from traits can only be used if the type parameter is bounded by the trait\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: the following trait defines an item `get_i16`, perhaps you need to restrict type parameter `E` with it:\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m59\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        impl<$($gen:\u001b[0m\u001b[0m\u001b[38;5;10m Buf\u001b[0m\u001b[0m $gen_constraint),*> Decode<'_> for $type<$($gen),*> {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[38;5;10m+++\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"no function or associated item named `put_u24` found for type parameter `E` in the current scope","code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","spans":[{"file_name":"binary/src/impls/primitive.rs","byte_start":1803,"byte_end":1810,"line_start":70,"line_end":70,"column_start":43,"column_end":50,"is_primary":true,"text":[{"text":"impl_serde!(U24, <E: ByteOrder>, get_u24, put_u24);","highlight_start":43,"highlight_end":50}],"label":"function or associated item not found in `E`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"binary/src/impls/primitive.rs","byte_start":1779,"byte_end":1780,"line_start":70,"line_end":70,"column_start":19,"column_end":20,"is_primary":false,"text":[{"text":"impl_serde!(U24, <E: ByteOrder>, get_u24, put_u24);","highlight_start":19,"highlight_end":20}],"label":"function or associated item `put_u24` not found for this type parameter","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0599]\u001b[0m\u001b[0m\u001b[1m: no function or associated item named `put_u24` found for type parameter `E` in the current scope\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mbinary/src/impls/primitive.rs:70:43\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m70\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mimpl_serde!(U24, <E: ByteOrder>, get_u24, put_u24);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-\u001b[0m\u001b[0m                       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mfunction or associated item not found in `E`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mfunction or associated item `put_u24` not found for this type parameter\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"no function or associated item named `get_u24` found for type parameter `E` in the current scope","code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","spans":[{"file_name":"binary/src/impls/primitive.rs","byte_start":1794,"byte_end":1801,"line_start":70,"line_end":70,"column_start":34,"column_end":41,"is_primary":true,"text":[{"text":"impl_serde!(U24, <E: ByteOrder>, get_u24, put_u24);","highlight_start":34,"highlight_end":41}],"label":"function or associated item not found in `E`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"binary/src/impls/primitive.rs","byte_start":1779,"byte_end":1780,"line_start":70,"line_end":70,"column_start":19,"column_end":20,"is_primary":false,"text":[{"text":"impl_serde!(U24, <E: ByteOrder>, get_u24, put_u24);","highlight_start":19,"highlight_end":20}],"label":"function or associated item `get_u24` not found for this type parameter","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0599]\u001b[0m\u001b[0m\u001b[1m: no function or associated item named `get_u24` found for type parameter `E` in the current scope\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mbinary/src/impls/primitive.rs:70:34\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m70\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mimpl_serde!(U24, <E: ByteOrder>, get_u24, put_u24);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-\u001b[0m\u001b[0m              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mfunction or associated item not found in `E`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mfunction or associated item `get_u24` not found for this type parameter\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"no function or associated item named `put_u32` found for type parameter `E` in the current scope","code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","spans":[{"file_name":"binary/src/impls/primitive.rs","byte_start":1855,"byte_end":1862,"line_start":71,"line_end":71,"column_start":43,"column_end":50,"is_primary":true,"text":[{"text":"impl_serde!(U32, <E: ByteOrder>, get_u32, put_u32);","highlight_start":43,"highlight_end":50}],"label":"function or associated item cannot be called on `E` due to unsatisfied trait bounds","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"binary/src/impls/primitive.rs","byte_start":1831,"byte_end":1832,"line_start":71,"line_end":71,"column_start":19,"column_end":20,"is_primary":false,"text":[{"text":"impl_serde!(U32, <E: ByteOrder>, get_u32, put_u32);","highlight_start":19,"highlight_end":20}],"label":"function or associated item `put_u32` not found for this type parameter","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"items from traits can only be used if the type parameter is bounded by the trait","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"the following trait defines an item `put_u32`, perhaps you need to restrict type parameter `E` with it:","code":null,"level":"help","spans":[{"file_name":"binary/src/impls/primitive.rs","byte_start":1236,"byte_end":1236,"line_start":52,"line_end":52,"column_start":21,"column_end":21,"is_primary":true,"text":[{"text":"        impl<$($gen: $gen_constraint),*> Encode for $type<$($gen),*> {","highlight_start":21,"highlight_end":21}],"label":null,"suggested_replacement":" BufMut","suggestion_applicability":"MaybeIncorrect","expansion":{"span":{"file_name":"binary/src/impls/primitive.rs","byte_start":1813,"byte_end":1863,"line_start":71,"line_end":71,"column_start":1,"column_end":51,"is_primary":false,"text":[{"text":"impl_serde!(U32, <E: ByteOrder>, get_u32, put_u32);","highlight_start":1,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"impl_serde!","def_site_span":{"file_name":"binary/src/impls/primitive.rs","byte_start":1098,"byte_end":1121,"line_start":50,"line_end":50,"column_start":1,"column_end":24,"is_primary":false,"text":[{"text":"macro_rules! impl_serde {","highlight_start":1,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0599]\u001b[0m\u001b[0m\u001b[1m: no function or associated item named `put_u32` found for type parameter `E` in the current scope\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mbinary/src/impls/primitive.rs:71:43\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m71\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mimpl_serde!(U32, <E: ByteOrder>, get_u32, put_u32);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-\u001b[0m\u001b[0m                       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mfunction or associated item cannot be called on `E` due to unsatisfied trait bounds\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mfunction or associated item `put_u32` not found for this type parameter\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: items from traits can only be used if the type parameter is bounded by the trait\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: the following trait defines an item `put_u32`, perhaps you need to restrict type parameter `E` with it:\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m52\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        impl<$($gen:\u001b[0m\u001b[0m\u001b[38;5;10m BufMut\u001b[0m\u001b[0m $gen_constraint),*> Encode for $type<$($gen),*> {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[38;5;10m++++++\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"no function or associated item named `get_u32` found for type parameter `E` in the current scope","code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","spans":[{"file_name":"binary/src/impls/primitive.rs","byte_start":1846,"byte_end":1853,"line_start":71,"line_end":71,"column_start":34,"column_end":41,"is_primary":true,"text":[{"text":"impl_serde!(U32, <E: ByteOrder>, get_u32, put_u32);","highlight_start":34,"highlight_end":41}],"label":"function or associated item cannot be called on `E` due to unsatisfied trait bounds","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"binary/src/impls/primitive.rs","byte_start":1831,"byte_end":1832,"line_start":71,"line_end":71,"column_start":19,"column_end":20,"is_primary":false,"text":[{"text":"impl_serde!(U32, <E: ByteOrder>, get_u32, put_u32);","highlight_start":19,"highlight_end":20}],"label":"function or associated item `get_u32` not found for this type parameter","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"items from traits can only be used if the type parameter is bounded by the trait","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"the following trait defines an item `get_u32`, perhaps you need to restrict type parameter `E` with it:","code":null,"level":"help","spans":[{"file_name":"binary/src/impls/primitive.rs","byte_start":1441,"byte_end":1441,"line_start":59,"line_end":59,"column_start":21,"column_end":21,"is_primary":true,"text":[{"text":"        impl<$($gen: $gen_constraint),*> Decode<'_> for $type<$($gen),*> {","highlight_start":21,"highlight_end":21}],"label":null,"suggested_replacement":" Buf","suggestion_applicability":"MaybeIncorrect","expansion":{"span":{"file_name":"binary/src/impls/primitive.rs","byte_start":1813,"byte_end":1863,"line_start":71,"line_end":71,"column_start":1,"column_end":51,"is_primary":false,"text":[{"text":"impl_serde!(U32, <E: ByteOrder>, get_u32, put_u32);","highlight_start":1,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"impl_serde!","def_site_span":{"file_name":"binary/src/impls/primitive.rs","byte_start":1098,"byte_end":1121,"line_start":50,"line_end":50,"column_start":1,"column_end":24,"is_primary":false,"text":[{"text":"macro_rules! impl_serde {","highlight_start":1,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0599]\u001b[0m\u001b[0m\u001b[1m: no function or associated item named `get_u32` found for type parameter `E` in the current scope\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mbinary/src/impls/primitive.rs:71:34\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m71\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mimpl_serde!(U32, <E: ByteOrder>, get_u32, put_u32);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-\u001b[0m\u001b[0m              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mfunction or associated item cannot be called on `E` due to unsatisfied trait bounds\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mfunction or associated item `get_u32` not found for this type parameter\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: items from traits can only be used if the type parameter is bounded by the trait\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: the following trait defines an item `get_u32`, perhaps you need to restrict type parameter `E` with it:\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m59\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        impl<$($gen:\u001b[0m\u001b[0m\u001b[38;5;10m Buf\u001b[0m\u001b[0m $gen_constraint),*> Decode<'_> for $type<$($gen),*> {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[38;5;10m+++\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"no function or associated item named `put_i32` found for type parameter `E` in the current scope","code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","spans":[{"file_name":"binary/src/impls/primitive.rs","byte_start":1907,"byte_end":1914,"line_start":72,"line_end":72,"column_start":43,"column_end":50,"is_primary":true,"text":[{"text":"impl_serde!(I32, <E: ByteOrder>, get_i32, put_i32);","highlight_start":43,"highlight_end":50}],"label":"function or associated item cannot be called on `E` due to unsatisfied trait bounds","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"binary/src/impls/primitive.rs","byte_start":1883,"byte_end":1884,"line_start":72,"line_end":72,"column_start":19,"column_end":20,"is_primary":false,"text":[{"text":"impl_serde!(I32, <E: ByteOrder>, get_i32, put_i32);","highlight_start":19,"highlight_end":20}],"label":"function or associated item `put_i32` not found for this type parameter","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"items from traits can only be used if the type parameter is bounded by the trait","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"the following trait defines an item `put_i32`, perhaps you need to restrict type parameter `E` with it:","code":null,"level":"help","spans":[{"file_name":"binary/src/impls/primitive.rs","byte_start":1236,"byte_end":1236,"line_start":52,"line_end":52,"column_start":21,"column_end":21,"is_primary":true,"text":[{"text":"        impl<$($gen: $gen_constraint),*> Encode for $type<$($gen),*> {","highlight_start":21,"highlight_end":21}],"label":null,"suggested_replacement":" BufMut","suggestion_applicability":"MaybeIncorrect","expansion":{"span":{"file_name":"binary/src/impls/primitive.rs","byte_start":1865,"byte_end":1915,"line_start":72,"line_end":72,"column_start":1,"column_end":51,"is_primary":false,"text":[{"text":"impl_serde!(I32, <E: ByteOrder>, get_i32, put_i32);","highlight_start":1,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"impl_serde!","def_site_span":{"file_name":"binary/src/impls/primitive.rs","byte_start":1098,"byte_end":1121,"line_start":50,"line_end":50,"column_start":1,"column_end":24,"is_primary":false,"text":[{"text":"macro_rules! impl_serde {","highlight_start":1,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0599]\u001b[0m\u001b[0m\u001b[1m: no function or associated item named `put_i32` found for type parameter `E` in the current scope\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mbinary/src/impls/primitive.rs:72:43\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m72\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mimpl_serde!(I32, <E: ByteOrder>, get_i32, put_i32);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-\u001b[0m\u001b[0m                       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mfunction or associated item cannot be called on `E` due to unsatisfied trait bounds\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mfunction or associated item `put_i32` not found for this type parameter\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: items from traits can only be used if the type parameter is bounded by the trait\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: the following trait defines an item `put_i32`, perhaps you need to restrict type parameter `E` with it:\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m52\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        impl<$($gen:\u001b[0m\u001b[0m\u001b[38;5;10m BufMut\u001b[0m\u001b[0m $gen_constraint),*> Encode for $type<$($gen),*> {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[38;5;10m++++++\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"no function or associated item named `get_i32` found for type parameter `E` in the current scope","code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","spans":[{"file_name":"binary/src/impls/primitive.rs","byte_start":1898,"byte_end":1905,"line_start":72,"line_end":72,"column_start":34,"column_end":41,"is_primary":true,"text":[{"text":"impl_serde!(I32, <E: ByteOrder>, get_i32, put_i32);","highlight_start":34,"highlight_end":41}],"label":"function or associated item cannot be called on `E` due to unsatisfied trait bounds","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"binary/src/impls/primitive.rs","byte_start":1883,"byte_end":1884,"line_start":72,"line_end":72,"column_start":19,"column_end":20,"is_primary":false,"text":[{"text":"impl_serde!(I32, <E: ByteOrder>, get_i32, put_i32);","highlight_start":19,"highlight_end":20}],"label":"function or associated item `get_i32` not found for this type parameter","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"items from traits can only be used if the type parameter is bounded by the trait","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"the following trait defines an item `get_i32`, perhaps you need to restrict type parameter `E` with it:","code":null,"level":"help","spans":[{"file_name":"binary/src/impls/primitive.rs","byte_start":1441,"byte_end":1441,"line_start":59,"line_end":59,"column_start":21,"column_end":21,"is_primary":true,"text":[{"text":"        impl<$($gen: $gen_constraint),*> Decode<'_> for $type<$($gen),*> {","highlight_start":21,"highlight_end":21}],"label":null,"suggested_replacement":" Buf","suggestion_applicability":"MaybeIncorrect","expansion":{"span":{"file_name":"binary/src/impls/primitive.rs","byte_start":1865,"byte_end":1915,"line_start":72,"line_end":72,"column_start":1,"column_end":51,"is_primary":false,"text":[{"text":"impl_serde!(I32, <E: ByteOrder>, get_i32, put_i32);","highlight_start":1,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"impl_serde!","def_site_span":{"file_name":"binary/src/impls/primitive.rs","byte_start":1098,"byte_end":1121,"line_start":50,"line_end":50,"column_start":1,"column_end":24,"is_primary":false,"text":[{"text":"macro_rules! impl_serde {","highlight_start":1,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0599]\u001b[0m\u001b[0m\u001b[1m: no function or associated item named `get_i32` found for type parameter `E` in the current scope\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mbinary/src/impls/primitive.rs:72:34\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m72\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mimpl_serde!(I32, <E: ByteOrder>, get_i32, put_i32);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-\u001b[0m\u001b[0m              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mfunction or associated item cannot be called on `E` due to unsatisfied trait bounds\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mfunction or associated item `get_i32` not found for this type parameter\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: items from traits can only be used if the type parameter is bounded by the trait\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: the following trait defines an item `get_i32`, perhaps you need to restrict type parameter `E` with it:\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m59\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        impl<$($gen:\u001b[0m\u001b[0m\u001b[38;5;10m Buf\u001b[0m\u001b[0m $gen_constraint),*> Decode<'_> for $type<$($gen),*> {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[38;5;10m+++\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"no function or associated item named `put_u64` found for type parameter `E` in the current scope","code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","spans":[{"file_name":"binary/src/impls/primitive.rs","byte_start":1959,"byte_end":1966,"line_start":73,"line_end":73,"column_start":43,"column_end":50,"is_primary":true,"text":[{"text":"impl_serde!(U64, <E: ByteOrder>, get_u64, put_u64);","highlight_start":43,"highlight_end":50}],"label":"function or associated item cannot be called on `E` due to unsatisfied trait bounds","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"binary/src/impls/primitive.rs","byte_start":1935,"byte_end":1936,"line_start":73,"line_end":73,"column_start":19,"column_end":20,"is_primary":false,"text":[{"text":"impl_serde!(U64, <E: ByteOrder>, get_u64, put_u64);","highlight_start":19,"highlight_end":20}],"label":"function or associated item `put_u64` not found for this type parameter","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"items from traits can only be used if the type parameter is bounded by the trait","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"the following trait defines an item `put_u64`, perhaps you need to restrict type parameter `E` with it:","code":null,"level":"help","spans":[{"file_name":"binary/src/impls/primitive.rs","byte_start":1236,"byte_end":1236,"line_start":52,"line_end":52,"column_start":21,"column_end":21,"is_primary":true,"text":[{"text":"        impl<$($gen: $gen_constraint),*> Encode for $type<$($gen),*> {","highlight_start":21,"highlight_end":21}],"label":null,"suggested_replacement":" BufMut","suggestion_applicability":"MaybeIncorrect","expansion":{"span":{"file_name":"binary/src/impls/primitive.rs","byte_start":1917,"byte_end":1967,"line_start":73,"line_end":73,"column_start":1,"column_end":51,"is_primary":false,"text":[{"text":"impl_serde!(U64, <E: ByteOrder>, get_u64, put_u64);","highlight_start":1,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"impl_serde!","def_site_span":{"file_name":"binary/src/impls/primitive.rs","byte_start":1098,"byte_end":1121,"line_start":50,"line_end":50,"column_start":1,"column_end":24,"is_primary":false,"text":[{"text":"macro_rules! impl_serde {","highlight_start":1,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0599]\u001b[0m\u001b[0m\u001b[1m: no function or associated item named `put_u64` found for type parameter `E` in the current scope\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mbinary/src/impls/primitive.rs:73:43\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m73\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mimpl_serde!(U64, <E: ByteOrder>, get_u64, put_u64);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-\u001b[0m\u001b[0m                       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mfunction or associated item cannot be called on `E` due to unsatisfied trait bounds\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mfunction or associated item `put_u64` not found for this type parameter\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: items from traits can only be used if the type parameter is bounded by the trait\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: the following trait defines an item `put_u64`, perhaps you need to restrict type parameter `E` with it:\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m52\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        impl<$($gen:\u001b[0m\u001b[0m\u001b[38;5;10m BufMut\u001b[0m\u001b[0m $gen_constraint),*> Encode for $type<$($gen),*> {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[38;5;10m++++++\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"no function or associated item named `get_u64` found for type parameter `E` in the current scope","code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","spans":[{"file_name":"binary/src/impls/primitive.rs","byte_start":1950,"byte_end":1957,"line_start":73,"line_end":73,"column_start":34,"column_end":41,"is_primary":true,"text":[{"text":"impl_serde!(U64, <E: ByteOrder>, get_u64, put_u64);","highlight_start":34,"highlight_end":41}],"label":"function or associated item cannot be called on `E` due to unsatisfied trait bounds","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"binary/src/impls/primitive.rs","byte_start":1935,"byte_end":1936,"line_start":73,"line_end":73,"column_start":19,"column_end":20,"is_primary":false,"text":[{"text":"impl_serde!(U64, <E: ByteOrder>, get_u64, put_u64);","highlight_start":19,"highlight_end":20}],"label":"function or associated item `get_u64` not found for this type parameter","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"items from traits can only be used if the type parameter is bounded by the trait","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"the following trait defines an item `get_u64`, perhaps you need to restrict type parameter `E` with it:","code":null,"level":"help","spans":[{"file_name":"binary/src/impls/primitive.rs","byte_start":1441,"byte_end":1441,"line_start":59,"line_end":59,"column_start":21,"column_end":21,"is_primary":true,"text":[{"text":"        impl<$($gen: $gen_constraint),*> Decode<'_> for $type<$($gen),*> {","highlight_start":21,"highlight_end":21}],"label":null,"suggested_replacement":" Buf","suggestion_applicability":"MaybeIncorrect","expansion":{"span":{"file_name":"binary/src/impls/primitive.rs","byte_start":1917,"byte_end":1967,"line_start":73,"line_end":73,"column_start":1,"column_end":51,"is_primary":false,"text":[{"text":"impl_serde!(U64, <E: ByteOrder>, get_u64, put_u64);","highlight_start":1,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"impl_serde!","def_site_span":{"file_name":"binary/src/impls/primitive.rs","byte_start":1098,"byte_end":1121,"line_start":50,"line_end":50,"column_start":1,"column_end":24,"is_primary":false,"text":[{"text":"macro_rules! impl_serde {","highlight_start":1,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0599]\u001b[0m\u001b[0m\u001b[1m: no function or associated item named `get_u64` found for type parameter `E` in the current scope\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mbinary/src/impls/primitive.rs:73:34\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m73\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mimpl_serde!(U64, <E: ByteOrder>, get_u64, put_u64);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-\u001b[0m\u001b[0m              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mfunction or associated item cannot be called on `E` due to unsatisfied trait bounds\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mfunction or associated item `get_u64` not found for this type parameter\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: items from traits can only be used if the type parameter is bounded by the trait\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: the following trait defines an item `get_u64`, perhaps you need to restrict type parameter `E` with it:\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m59\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        impl<$($gen:\u001b[0m\u001b[0m\u001b[38;5;10m Buf\u001b[0m\u001b[0m $gen_constraint),*> Decode<'_> for $type<$($gen),*> {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[38;5;10m+++\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"no function or associated item named `put_i64` found for type parameter `E` in the current scope","code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","spans":[{"file_name":"binary/src/impls/primitive.rs","byte_start":2011,"byte_end":2018,"line_start":74,"line_end":74,"column_start":43,"column_end":50,"is_primary":true,"text":[{"text":"impl_serde!(I64, <E: ByteOrder>, get_i64, put_i64);","highlight_start":43,"highlight_end":50}],"label":"function or associated item cannot be called on `E` due to unsatisfied trait bounds","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"binary/src/impls/primitive.rs","byte_start":1987,"byte_end":1988,"line_start":74,"line_end":74,"column_start":19,"column_end":20,"is_primary":false,"text":[{"text":"impl_serde!(I64, <E: ByteOrder>, get_i64, put_i64);","highlight_start":19,"highlight_end":20}],"label":"function or associated item `put_i64` not found for this type parameter","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"items from traits can only be used if the type parameter is bounded by the trait","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"the following trait defines an item `put_i64`, perhaps you need to restrict type parameter `E` with it:","code":null,"level":"help","spans":[{"file_name":"binary/src/impls/primitive.rs","byte_start":1236,"byte_end":1236,"line_start":52,"line_end":52,"column_start":21,"column_end":21,"is_primary":true,"text":[{"text":"        impl<$($gen: $gen_constraint),*> Encode for $type<$($gen),*> {","highlight_start":21,"highlight_end":21}],"label":null,"suggested_replacement":" BufMut","suggestion_applicability":"MaybeIncorrect","expansion":{"span":{"file_name":"binary/src/impls/primitive.rs","byte_start":1969,"byte_end":2019,"line_start":74,"line_end":74,"column_start":1,"column_end":51,"is_primary":false,"text":[{"text":"impl_serde!(I64, <E: ByteOrder>, get_i64, put_i64);","highlight_start":1,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"impl_serde!","def_site_span":{"file_name":"binary/src/impls/primitive.rs","byte_start":1098,"byte_end":1121,"line_start":50,"line_end":50,"column_start":1,"column_end":24,"is_primary":false,"text":[{"text":"macro_rules! impl_serde {","highlight_start":1,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0599]\u001b[0m\u001b[0m\u001b[1m: no function or associated item named `put_i64` found for type parameter `E` in the current scope\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mbinary/src/impls/primitive.rs:74:43\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m74\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mimpl_serde!(I64, <E: ByteOrder>, get_i64, put_i64);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-\u001b[0m\u001b[0m                       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mfunction or associated item cannot be called on `E` due to unsatisfied trait bounds\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mfunction or associated item `put_i64` not found for this type parameter\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: items from traits can only be used if the type parameter is bounded by the trait\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: the following trait defines an item `put_i64`, perhaps you need to restrict type parameter `E` with it:\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m52\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        impl<$($gen:\u001b[0m\u001b[0m\u001b[38;5;10m BufMut\u001b[0m\u001b[0m $gen_constraint),*> Encode for $type<$($gen),*> {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[38;5;10m++++++\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"no function or associated item named `get_i64` found for type parameter `E` in the current scope","code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","spans":[{"file_name":"binary/src/impls/primitive.rs","byte_start":2002,"byte_end":2009,"line_start":74,"line_end":74,"column_start":34,"column_end":41,"is_primary":true,"text":[{"text":"impl_serde!(I64, <E: ByteOrder>, get_i64, put_i64);","highlight_start":34,"highlight_end":41}],"label":"function or associated item cannot be called on `E` due to unsatisfied trait bounds","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"binary/src/impls/primitive.rs","byte_start":1987,"byte_end":1988,"line_start":74,"line_end":74,"column_start":19,"column_end":20,"is_primary":false,"text":[{"text":"impl_serde!(I64, <E: ByteOrder>, get_i64, put_i64);","highlight_start":19,"highlight_end":20}],"label":"function or associated item `get_i64` not found for this type parameter","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"items from traits can only be used if the type parameter is bounded by the trait","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"the following trait defines an item `get_i64`, perhaps you need to restrict type parameter `E` with it:","code":null,"level":"help","spans":[{"file_name":"binary/src/impls/primitive.rs","byte_start":1441,"byte_end":1441,"line_start":59,"line_end":59,"column_start":21,"column_end":21,"is_primary":true,"text":[{"text":"        impl<$($gen: $gen_constraint),*> Decode<'_> for $type<$($gen),*> {","highlight_start":21,"highlight_end":21}],"label":null,"suggested_replacement":" Buf","suggestion_applicability":"MaybeIncorrect","expansion":{"span":{"file_name":"binary/src/impls/primitive.rs","byte_start":1969,"byte_end":2019,"line_start":74,"line_end":74,"column_start":1,"column_end":51,"is_primary":false,"text":[{"text":"impl_serde!(I64, <E: ByteOrder>, get_i64, put_i64);","highlight_start":1,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"impl_serde!","def_site_span":{"file_name":"binary/src/impls/primitive.rs","byte_start":1098,"byte_end":1121,"line_start":50,"line_end":50,"column_start":1,"column_end":24,"is_primary":false,"text":[{"text":"macro_rules! impl_serde {","highlight_start":1,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0599]\u001b[0m\u001b[0m\u001b[1m: no function or associated item named `get_i64` found for type parameter `E` in the current scope\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mbinary/src/impls/primitive.rs:74:34\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m74\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mimpl_serde!(I64, <E: ByteOrder>, get_i64, put_i64);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-\u001b[0m\u001b[0m              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mfunction or associated item cannot be called on `E` due to unsatisfied trait bounds\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mfunction or associated item `get_i64` not found for this type parameter\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: items from traits can only be used if the type parameter is bounded by the trait\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: the following trait defines an item `get_i64`, perhaps you need to restrict type parameter `E` with it:\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m59\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        impl<$($gen:\u001b[0m\u001b[0m\u001b[38;5;10m Buf\u001b[0m\u001b[0m $gen_constraint),*> Decode<'_> for $type<$($gen),*> {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[38;5;10m+++\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"no function or associated item named `put_f32` found for type parameter `E` in the current scope","code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","spans":[{"file_name":"binary/src/impls/primitive.rs","byte_start":2063,"byte_end":2070,"line_start":75,"line_end":75,"column_start":43,"column_end":50,"is_primary":true,"text":[{"text":"impl_serde!(F32, <E: ByteOrder>, get_f32, put_f32);","highlight_start":43,"highlight_end":50}],"label":"function or associated item cannot be called on `E` due to unsatisfied trait bounds","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"binary/src/impls/primitive.rs","byte_start":2039,"byte_end":2040,"line_start":75,"line_end":75,"column_start":19,"column_end":20,"is_primary":false,"text":[{"text":"impl_serde!(F32, <E: ByteOrder>, get_f32, put_f32);","highlight_start":19,"highlight_end":20}],"label":"function or associated item `put_f32` not found for this type parameter","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"items from traits can only be used if the type parameter is bounded by the trait","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"the following trait defines an item `put_f32`, perhaps you need to restrict type parameter `E` with it:","code":null,"level":"help","spans":[{"file_name":"binary/src/impls/primitive.rs","byte_start":1236,"byte_end":1236,"line_start":52,"line_end":52,"column_start":21,"column_end":21,"is_primary":true,"text":[{"text":"        impl<$($gen: $gen_constraint),*> Encode for $type<$($gen),*> {","highlight_start":21,"highlight_end":21}],"label":null,"suggested_replacement":" BufMut","suggestion_applicability":"MaybeIncorrect","expansion":{"span":{"file_name":"binary/src/impls/primitive.rs","byte_start":2021,"byte_end":2071,"line_start":75,"line_end":75,"column_start":1,"column_end":51,"is_primary":false,"text":[{"text":"impl_serde!(F32, <E: ByteOrder>, get_f32, put_f32);","highlight_start":1,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"impl_serde!","def_site_span":{"file_name":"binary/src/impls/primitive.rs","byte_start":1098,"byte_end":1121,"line_start":50,"line_end":50,"column_start":1,"column_end":24,"is_primary":false,"text":[{"text":"macro_rules! impl_serde {","highlight_start":1,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0599]\u001b[0m\u001b[0m\u001b[1m: no function or associated item named `put_f32` found for type parameter `E` in the current scope\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mbinary/src/impls/primitive.rs:75:43\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m75\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mimpl_serde!(F32, <E: ByteOrder>, get_f32, put_f32);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-\u001b[0m\u001b[0m                       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mfunction or associated item cannot be called on `E` due to unsatisfied trait bounds\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mfunction or associated item `put_f32` not found for this type parameter\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: items from traits can only be used if the type parameter is bounded by the trait\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: the following trait defines an item `put_f32`, perhaps you need to restrict type parameter `E` with it:\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m52\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        impl<$($gen:\u001b[0m\u001b[0m\u001b[38;5;10m BufMut\u001b[0m\u001b[0m $gen_constraint),*> Encode for $type<$($gen),*> {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[38;5;10m++++++\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"no function or associated item named `get_f32` found for type parameter `E` in the current scope","code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","spans":[{"file_name":"binary/src/impls/primitive.rs","byte_start":2054,"byte_end":2061,"line_start":75,"line_end":75,"column_start":34,"column_end":41,"is_primary":true,"text":[{"text":"impl_serde!(F32, <E: ByteOrder>, get_f32, put_f32);","highlight_start":34,"highlight_end":41}],"label":"function or associated item cannot be called on `E` due to unsatisfied trait bounds","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"binary/src/impls/primitive.rs","byte_start":2039,"byte_end":2040,"line_start":75,"line_end":75,"column_start":19,"column_end":20,"is_primary":false,"text":[{"text":"impl_serde!(F32, <E: ByteOrder>, get_f32, put_f32);","highlight_start":19,"highlight_end":20}],"label":"function or associated item `get_f32` not found for this type parameter","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"items from traits can only be used if the type parameter is bounded by the trait","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"the following trait defines an item `get_f32`, perhaps you need to restrict type parameter `E` with it:","code":null,"level":"help","spans":[{"file_name":"binary/src/impls/primitive.rs","byte_start":1441,"byte_end":1441,"line_start":59,"line_end":59,"column_start":21,"column_end":21,"is_primary":true,"text":[{"text":"        impl<$($gen: $gen_constraint),*> Decode<'_> for $type<$($gen),*> {","highlight_start":21,"highlight_end":21}],"label":null,"suggested_replacement":" Buf","suggestion_applicability":"MaybeIncorrect","expansion":{"span":{"file_name":"binary/src/impls/primitive.rs","byte_start":2021,"byte_end":2071,"line_start":75,"line_end":75,"column_start":1,"column_end":51,"is_primary":false,"text":[{"text":"impl_serde!(F32, <E: ByteOrder>, get_f32, put_f32);","highlight_start":1,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"impl_serde!","def_site_span":{"file_name":"binary/src/impls/primitive.rs","byte_start":1098,"byte_end":1121,"line_start":50,"line_end":50,"column_start":1,"column_end":24,"is_primary":false,"text":[{"text":"macro_rules! impl_serde {","highlight_start":1,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0599]\u001b[0m\u001b[0m\u001b[1m: no function or associated item named `get_f32` found for type parameter `E` in the current scope\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mbinary/src/impls/primitive.rs:75:34\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m75\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mimpl_serde!(F32, <E: ByteOrder>, get_f32, put_f32);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-\u001b[0m\u001b[0m              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mfunction or associated item cannot be called on `E` due to unsatisfied trait bounds\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mfunction or associated item `get_f32` not found for this type parameter\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: items from traits can only be used if the type parameter is bounded by the trait\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: the following trait defines an item `get_f32`, perhaps you need to restrict type parameter `E` with it:\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m59\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        impl<$($gen:\u001b[0m\u001b[0m\u001b[38;5;10m Buf\u001b[0m\u001b[0m $gen_constraint),*> Decode<'_> for $type<$($gen),*> {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[38;5;10m+++\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"no function or associated item named `put_f64` found for type parameter `E` in the current scope","code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","spans":[{"file_name":"binary/src/impls/primitive.rs","byte_start":2115,"byte_end":2122,"line_start":76,"line_end":76,"column_start":43,"column_end":50,"is_primary":true,"text":[{"text":"impl_serde!(F64, <E: ByteOrder>, get_f64, put_f64);","highlight_start":43,"highlight_end":50}],"label":"function or associated item cannot be called on `E` due to unsatisfied trait bounds","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"binary/src/impls/primitive.rs","byte_start":2091,"byte_end":2092,"line_start":76,"line_end":76,"column_start":19,"column_end":20,"is_primary":false,"text":[{"text":"impl_serde!(F64, <E: ByteOrder>, get_f64, put_f64);","highlight_start":19,"highlight_end":20}],"label":"function or associated item `put_f64` not found for this type parameter","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"items from traits can only be used if the type parameter is bounded by the trait","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"the following trait defines an item `put_f64`, perhaps you need to restrict type parameter `E` with it:","code":null,"level":"help","spans":[{"file_name":"binary/src/impls/primitive.rs","byte_start":1236,"byte_end":1236,"line_start":52,"line_end":52,"column_start":21,"column_end":21,"is_primary":true,"text":[{"text":"        impl<$($gen: $gen_constraint),*> Encode for $type<$($gen),*> {","highlight_start":21,"highlight_end":21}],"label":null,"suggested_replacement":" BufMut","suggestion_applicability":"MaybeIncorrect","expansion":{"span":{"file_name":"binary/src/impls/primitive.rs","byte_start":2073,"byte_end":2123,"line_start":76,"line_end":76,"column_start":1,"column_end":51,"is_primary":false,"text":[{"text":"impl_serde!(F64, <E: ByteOrder>, get_f64, put_f64);","highlight_start":1,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"impl_serde!","def_site_span":{"file_name":"binary/src/impls/primitive.rs","byte_start":1098,"byte_end":1121,"line_start":50,"line_end":50,"column_start":1,"column_end":24,"is_primary":false,"text":[{"text":"macro_rules! impl_serde {","highlight_start":1,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0599]\u001b[0m\u001b[0m\u001b[1m: no function or associated item named `put_f64` found for type parameter `E` in the current scope\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mbinary/src/impls/primitive.rs:76:43\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m76\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mimpl_serde!(F64, <E: ByteOrder>, get_f64, put_f64);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-\u001b[0m\u001b[0m                       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mfunction or associated item cannot be called on `E` due to unsatisfied trait bounds\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mfunction or associated item `put_f64` not found for this type parameter\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: items from traits can only be used if the type parameter is bounded by the trait\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: the following trait defines an item `put_f64`, perhaps you need to restrict type parameter `E` with it:\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m52\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        impl<$($gen:\u001b[0m\u001b[0m\u001b[38;5;10m BufMut\u001b[0m\u001b[0m $gen_constraint),*> Encode for $type<$($gen),*> {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[38;5;10m++++++\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"no function or associated item named `get_f64` found for type parameter `E` in the current scope","code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","spans":[{"file_name":"binary/src/impls/primitive.rs","byte_start":2106,"byte_end":2113,"line_start":76,"line_end":76,"column_start":34,"column_end":41,"is_primary":true,"text":[{"text":"impl_serde!(F64, <E: ByteOrder>, get_f64, put_f64);","highlight_start":34,"highlight_end":41}],"label":"function or associated item cannot be called on `E` due to unsatisfied trait bounds","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"binary/src/impls/primitive.rs","byte_start":2091,"byte_end":2092,"line_start":76,"line_end":76,"column_start":19,"column_end":20,"is_primary":false,"text":[{"text":"impl_serde!(F64, <E: ByteOrder>, get_f64, put_f64);","highlight_start":19,"highlight_end":20}],"label":"function or associated item `get_f64` not found for this type parameter","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"items from traits can only be used if the type parameter is bounded by the trait","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"the following trait defines an item `get_f64`, perhaps you need to restrict type parameter `E` with it:","code":null,"level":"help","spans":[{"file_name":"binary/src/impls/primitive.rs","byte_start":1441,"byte_end":1441,"line_start":59,"line_end":59,"column_start":21,"column_end":21,"is_primary":true,"text":[{"text":"        impl<$($gen: $gen_constraint),*> Decode<'_> for $type<$($gen),*> {","highlight_start":21,"highlight_end":21}],"label":null,"suggested_replacement":" Buf","suggestion_applicability":"MaybeIncorrect","expansion":{"span":{"file_name":"binary/src/impls/primitive.rs","byte_start":2073,"byte_end":2123,"line_start":76,"line_end":76,"column_start":1,"column_end":51,"is_primary":false,"text":[{"text":"impl_serde!(F64, <E: ByteOrder>, get_f64, put_f64);","highlight_start":1,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"impl_serde!","def_site_span":{"file_name":"binary/src/impls/primitive.rs","byte_start":1098,"byte_end":1121,"line_start":50,"line_end":50,"column_start":1,"column_end":24,"is_primary":false,"text":[{"text":"macro_rules! impl_serde {","highlight_start":1,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0599]\u001b[0m\u001b[0m\u001b[1m: no function or associated item named `get_f64` found for type parameter `E` in the current scope\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mbinary/src/impls/primitive.rs:76:34\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m76\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mimpl_serde!(F64, <E: ByteOrder>, get_f64, put_f64);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-\u001b[0m\u001b[0m              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mfunction or associated item cannot be called on `E` due to unsatisfied trait bounds\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mfunction or associated item `get_f64` not found for this type parameter\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: items from traits can only be used if the type parameter is bounded by the trait\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: the following trait defines an item `get_f64`, perhaps you need to restrict type parameter `E` with it:\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m59\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        impl<$($gen:\u001b[0m\u001b[0m\u001b[38;5;10m Buf\u001b[0m\u001b[0m $gen_constraint),*> Decode<'_> for $type<$($gen),*> {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[38;5;10m+++\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"aborting due to 18 previous errors; 1 warning emitted","code":null,"level":"error","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: aborting due to 18 previous errors; 1 warning emitted\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"Some errors have detailed explanations: E0277, E0432, E0599.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1mSome errors have detailed explanations: E0277, E0432, E0599.\u001b[0m\n"}
{"$message_type":"diagnostic","message":"For more information about an error, try `rustc --explain E0277`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1mFor more information about an error, try `rustc --explain E0277`.\u001b[0m\n"}
